using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MathFunctionParser
{
    /** This class represents a node in the evaluation tree
     *  Generated by the Parser
     */
    class ExpressionNode
    {
        // Fields
        private ExpressionNode leftNode;
        private ExpressionNode rightNode;
        public Func<double, double, double> evalFunc;

        // Constructors
        public ExpressionNode() { }
        public ExpressionNode(ExpressionNode left, ExpressionNode right)
        {
            leftNode = left;
            rightNode = right;
        }

        // Methods
        public virtual double Evaluate()
        {
            return evalFunc(leftNode.Evaluate(), rightNode.Evaluate());
        }
    }
    class ConstantNode : ExpressionNode
    {
        // Fields
        private double value;

        // Constructor
        public ConstantNode(double value) { this.value = value; }

        // Methods
        override public double Evaluate() { return value; }
    }
}
